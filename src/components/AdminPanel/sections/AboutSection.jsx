import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import FormField from '../components/FormField'

const AboutSection = ({
  data,
  updateContent,
  updateArrayContent,
  addArrayItem,
  removeArrayItem,
  addToHistory,
}) => {
  const [activeSubTab, setActiveSubTab] = useState('personalInfo')

  if (!data) return null

  const subTabs = [
    { id: 'personalInfo', label: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', icon: 'üë§' },
    { id: 'biography', label: '–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è', icon: 'üìù' },
    { id: 'education', label: '–û—Å–≤—ñ—Ç–∞', icon: 'üéì' },
    { id: 'experience', label: '–î–æ—Å–≤—ñ–¥', icon: 'üíº' },
    { id: 'skills', label: '–ù–∞–≤–∏—á–∫–∏', icon: '‚ö°' },
    { id: 'achievements', label: '–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è', icon: 'üèÜ' },
  ]

  const handleFieldChange = (field, value) => {
    updateContent(field, value)
    addToHistory('edit', `–ó–º—ñ–Ω–µ–Ω–æ "${field}" –≤ —Å–µ–∫—Ü—ñ—ó "–ü—Ä–æ –º–µ–Ω–µ"`)
  }

  const handleArrayItemAdd = (field, newItem) => {
    addArrayItem(field, newItem)
    addToHistory('add', `–î–æ–¥–∞–Ω–æ –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç –¥–æ "${field}"`)
  }

  const handleArrayItemUpdate = (field, index, updatedItem) => {
    updateArrayContent(field, index, updatedItem)
    addToHistory('edit', `–û–Ω–æ–≤–ª–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç –≤ "${field}"`)
  }

  const handleArrayItemRemove = (field, index) => {
    removeArrayItem(field, index)
    addToHistory('edit', `–í–∏–¥–∞–ª–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç –∑ "${field}"`)
  }

  const handlePersonalInfoChange = (field, value) => {
    const personalInfo = { ...data.personalInfo, [field]: value }
    updateContent('personalInfo', personalInfo)
    addToHistory('edit', `–ó–º—ñ–Ω–µ–Ω–æ "${field}" –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ–π —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó`)
  }

  const handleLanguageChange = (index, field, value) => {
    const languages = [...(data.personalInfo?.languages || [])]
    languages[index] = { ...languages[index], [field]: value }
    handlePersonalInfoChange('languages', languages)
  }

  const addLanguage = () => {
    const languages = [...(data.personalInfo?.languages || []), { language: '', level: '' }]
    handlePersonalInfoChange('languages', languages)
    addToHistory('add', '–î–æ–¥–∞–Ω–æ –Ω–æ–≤—É –º–æ–≤—É')
  }

  const removeLanguage = (index) => {
    const languages = data.personalInfo?.languages?.filter((_, i) => i !== index) || []
    handlePersonalInfoChange('languages', languages)
    addToHistory('delete', '–í–∏–¥–∞–ª–µ–Ω–æ –º–æ–≤—É')
  }

  const addSpecialSkill = () => {
    const skills = [...(data.personalInfo?.specialSkills || []), '']
    handlePersonalInfoChange('specialSkills', skills)
    addToHistory('add', '–î–æ–¥–∞–Ω–æ –Ω–æ–≤—É —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—É –Ω–∞–≤–∏—á–∫—É')
  }

  const updateSpecialSkill = (index, value) => {
    const skills = [...(data.personalInfo?.specialSkills || [])]
    skills[index] = value
    handlePersonalInfoChange('specialSkills', skills)
  }

  const removeSpecialSkill = (index) => {
    const skills = data.personalInfo?.specialSkills?.filter((_, i) => i !== index) || []
    handlePersonalInfoChange('specialSkills', skills)
    addToHistory('delete', '–í–∏–¥–∞–ª–µ–Ω–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—É –Ω–∞–≤–∏—á–∫—É')
  }

  const renderPersonalInfoTab = () => (
    <div className="space-y-8">
      {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
      <div className="bg-white border border-gray-200 rounded-xl p-6">
        <h3 className="text-lg font-semibold text-gray-800 mb-6 flex items-center gap-2">
          ‚ÑπÔ∏è –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <FormField
            label="–í—ñ–∫"
            type="number"
            value={data.personalInfo?.age || ''}
            onChange={value => handlePersonalInfoChange('age', value)}
            placeholder="25"
          />
          <FormField
            label="–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è"
            type="date"
            value={data.personalInfo?.birthDate || ''}
            onChange={value => handlePersonalInfoChange('birthDate', value)}
          />
          <FormField
            label="–ú—ñ—Å—Ü–µ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è"
            value={data.personalInfo?.birthPlace || ''}
            onChange={value => handlePersonalInfoChange('birthPlace', value)}
            placeholder="–ú—ñ—Å—Ç–æ, –∫—Ä–∞—ó–Ω–∞"
          />
        </div>
      </div>

      {/* –§—ñ–∑–∏—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
      <div className="bg-white border border-gray-200 rounded-xl p-6">
        <h3 className="text-lg font-semibold text-gray-800 mb-6 flex items-center gap-2">
          üìè –§—ñ–∑–∏—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <FormField
            label="–ó—Ä—ñ—Å—Ç (—Å–º)"
            type="number"
            value={data.personalInfo?.height || ''}
            onChange={value => handlePersonalInfoChange('height', value)}
            placeholder="178"
          />
          <FormField
            label="–í–∞–≥–∞ (–∫–≥)"
            type="number"
            value={data.personalInfo?.weight || ''}
            onChange={value => handlePersonalInfoChange('weight', value)}
            placeholder="72"
          />
          <FormField
            label="–ö–æ–ª—ñ—Ä –æ—á–µ–π"
            value={data.personalInfo?.eyeColor || ''}
            onChange={value => handlePersonalInfoChange('eyeColor', value)}
            placeholder="–ö–∞—Ä—ñ"
          />
          <FormField
            label="–ö–æ–ª—ñ—Ä –≤–æ–ª–æ—Å—Å—è"
            value={data.personalInfo?.hairColor || ''}
            onChange={value => handlePersonalInfoChange('hairColor', value)}
            placeholder="–¢–µ–º–Ω–æ-–∫–∞—à—Ç–∞–Ω–æ–≤—ñ"
          />
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mt-6">
          <FormField
            label="–°—Ç–∞—Ç—É—Ä–∞"
            value={data.personalInfo?.physique || ''}
            onChange={value => handlePersonalInfoChange('physique', value)}
            placeholder="–ê—Ç–ª–µ—Ç–∏—á–Ω–∏–π"
          />
          <FormField
            label="–†–æ–∑–º—ñ—Ä —Å–æ—Ä–æ—á–∫–∏"
            value={data.personalInfo?.shirtSize || ''}
            onChange={value => handlePersonalInfoChange('shirtSize', value)}
            placeholder="L"
          />
          <FormField
            label="–†–æ–∑–º—ñ—Ä —à—Ç–∞–Ω—ñ–≤"
            value={data.personalInfo?.pantsSize || ''}
            onChange={value => handlePersonalInfoChange('pantsSize', value)}
            placeholder="32"
          />
          <FormField
            label="–†–æ–∑–º—ñ—Ä –≤–∑—É—Ç—Ç—è"
            value={data.personalInfo?.shoeSize || ''}
            onChange={value => handlePersonalInfoChange('shoeSize', value)}
            placeholder="43"
          />
        </div>
      </div>

      {/* –ú–æ–≤–∏ */}
      <div className="bg-white border border-gray-200 rounded-xl p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
            üåç –ó–Ω–∞–Ω–Ω—è –º–æ–≤
          </h3>
          <button
            onClick={addLanguage}
            className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center gap-2"
          >
            ‚ûï –î–æ–¥–∞—Ç–∏ –º–æ–≤—É
          </button>
        </div>
        <div className="space-y-4">
          {data.personalInfo?.languages?.map((lang, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              className="grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg"
            >
              <FormField
                label="–ú–æ–≤–∞"
                value={lang.language || ''}
                onChange={value => handleLanguageChange(index, 'language', value)}
                placeholder="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
              />
              <div className="flex gap-4 items-end">
                <FormField
                  label="–†—ñ–≤–µ–Ω—å"
                  type="select"
                  value={lang.level || ''}
                  onChange={value => handleLanguageChange(index, 'level', value)}
                  options={[
                    { value: '', label: '–û–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å' },
                    { value: '–†—ñ–¥–Ω–∞', label: '–†—ñ–¥–Ω–∞' },
                    { value: '–í—ñ–ª—å–Ω–æ', label: '–í—ñ–ª—å–Ω–æ' },
                    { value: '–î–æ–±—Ä–µ', label: '–î–æ–±—Ä–µ' },
                    { value: '–°–µ—Ä–µ–¥–Ω—ñ–π', label: '–°–µ—Ä–µ–¥–Ω—ñ–π' },
                    { value: '–ë–∞–∑–æ–≤–∏–π', label: '–ë–∞–∑–æ–≤–∏–π' }
                  ]}
                />
                <button
                  onClick={() => removeLanguage(index)}
                  className="mb-2 px-3 py-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors"
                >
                  üóëÔ∏è
                </button>
              </div>
            </motion.div>
          ))}
          {(!data.personalInfo?.languages || data.personalInfo.languages.length === 0) && (
            <div className="text-center py-8 text-gray-500">
              <div className="text-3xl mb-2">üåç</div>
              <p>–î–æ–¥–∞–π—Ç–µ –º–æ–≤–∏, —è–∫–∏–º–∏ –≤–∏ –≤–æ–ª–æ–¥—ñ—î—Ç–µ</p>
            </div>
          )}
        </div>
      </div>

      {/* –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –Ω–∞–≤–∏—á–∫–∏ */}
      <div className="bg-white border border-gray-200 rounded-xl p-6">
        <div className="flex items-center justify-between mb-6">
          <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
            üéØ –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –Ω–∞–≤–∏—á–∫–∏
          </h3>
          <button
            onClick={addSpecialSkill}
            className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center gap-2"
          >
            ‚ûï –î–æ–¥–∞—Ç–∏ –Ω–∞–≤–∏—á–∫—É
          </button>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {data.personalInfo?.specialSkills?.map((skill, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              className="bg-gray-50 rounded-lg p-4 flex items-center gap-3 group"
            >
              <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                <span className="text-sm">üéØ</span>
              </div>
              <input
                type="text"
                value={skill}
                onChange={e => updateSpecialSkill(index, e.target.value)}
                className="flex-1 border-none bg-transparent focus:outline-none font-medium text-gray-900"
                placeholder="–ù–∞–≤–∏—á–∫–∞..."
              />
              <button
                onClick={() => removeSpecialSkill(index)}
                className="opacity-0 group-hover:opacity-100 p-1 text-red-500 hover:text-red-700 transition-all"
              >
                ‚úï
              </button>
            </motion.div>
          ))}
          {(!data.personalInfo?.specialSkills || data.personalInfo.specialSkills.length === 0) && (
            <div className="col-span-full text-center py-8 text-gray-500">
              <div className="text-3xl mb-2">üéØ</div>
              <p>–î–æ–¥–∞–π—Ç–µ —Å–≤–æ—ó —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –Ω–∞–≤–∏—á–∫–∏</p>
            </div>
          )}
        </div>
      </div>

      {/* –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
      <div className="bg-white border border-gray-200 rounded-xl p-6">
        <h3 className="text-lg font-semibold text-gray-800 mb-6 flex items-center gap-2">
          üìÑ –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="flex items-center gap-3">
            <input
              type="checkbox"
              id="drivingLicense"
              checked={data.personalInfo?.drivingLicense || false}
              onChange={e => handlePersonalInfoChange('drivingLicense', e.target.checked)}
              className="w-5 h-5 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
            />
            <label htmlFor="drivingLicense" className="text-gray-900 font-medium">
              –ù–∞—è–≤–Ω—ñ—Å—Ç—å –≤–æ–¥—ñ–π—Å—å–∫–∏—Ö –ø—Ä–∞–≤
            </label>
          </div>
          <FormField
            label="–°—Ç–∞—Ç—É—Å –ø–∞—Å–ø–æ—Ä—Ç–∞"
            value={data.personalInfo?.passportStatus || ''}
            onChange={value => handlePersonalInfoChange('passportStatus', value)}
            placeholder="–î—ñ–π—Å–Ω–∏–π –∑–∞–∫–æ—Ä–¥–æ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç"
          />
        </div>
      </div>
    </div>
  )

  const renderBiographyTab = () => (
    <div className="space-y-6">
      <FormField
        label="–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è"
        type="textarea"
        value={data.biography || ''}
        onChange={value => handleFieldChange('biography', value)}
        placeholder="–†–æ–∑–∫–∞–∂—ñ—Ç—å —Å–≤–æ—é —ñ—Å—Ç–æ—Ä—ñ—é, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ç–∞ —â–æ –≤–∞—Å –≤–∏—Ä—ñ–∑–Ω—è—î..."
        rows={8}
        maxLength={2000}
        showCharCount
        helpText="–û–ø–∏—à—ñ—Ç—å —Å–≤—ñ–π —Ç–≤–æ—Ä—á–∏–π —à–ª—è—Ö, –≤–∞–∂–ª–∏–≤—ñ –º–æ–º–µ–Ω—Ç–∏ –∫–∞—Ä'—î—Ä–∏ —Ç–∞ –æ—Å–æ–±–∏—Å—Ç—ñ —è–∫–æ—Å—Ç—ñ"
      />

      <div className="bg-gradient-to-r from-purple-50 to-pink-50 p-6 rounded-xl border border-purple-200">
        <h3 className="text-lg font-semibold text-gray-800 mb-4">üëÅÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥</h3>
        <div className="bg-white p-6 rounded-lg shadow-sm">
          <p className="text-gray-800 leading-relaxed">
            {data.biography || '–¢—É—Ç –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–∞ –≤–∞—à–∞ –±—ñ–æ–≥—Ä–∞—Ñ—ñ—è...'}
          </p>
        </div>
      </div>
    </div>
  )

  const renderEducationTab = () => (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-800">–û—Å–≤—ñ—Ç–∞</h3>
        <button
          onClick={() => handleArrayItemAdd('education', { institution: '', degree: '' })}
          className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center gap-2"
        >
          ‚ûï –î–æ–¥–∞—Ç–∏ –æ—Å–≤—ñ—Ç—É
        </button>
      </div>

      <div className="space-y-4">
        {data.education?.map((item, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-shadow"
          >
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <FormField
                label="–ù–∞–≤—á–∞–ª—å–Ω–∏–π –∑–∞–∫–ª–∞–¥"
                value={item.institution || ''}
                onChange={value =>
                  handleArrayItemUpdate('education', index, { ...item, institution: value })
                }
                placeholder="–ù–∞–∑–≤–∞ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É, –∫–æ–ª–µ–¥–∂—É, —à–∫–æ–ª–∏..."
                required
              />

              <FormField
                label="–°—Ç—É–ø—ñ–Ω—å/–ö–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è"
                value={item.degree || ''}
                onChange={value =>
                  handleArrayItemUpdate('education', index, { ...item, degree: value })
                }
                placeholder="–ë–∞–∫–∞–ª–∞–≤—Ä, –º–∞–≥—ñ—Å—Ç—Ä, —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç..."
                required
              />
            </div>

            <button
              onClick={() => handleArrayItemRemove('education', index)}
              className="px-3 py-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-2"
            >
              üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
            </button>
          </motion.div>
        ))}

        {(!data.education || data.education.length === 0) && (
          <div className="text-center py-12 text-gray-500">
            <div className="text-4xl mb-4">üéì</div>
            <p className="text-lg font-medium mb-2">–î–æ–¥–∞–π—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å–≤—ñ—Ç—É</p>
            <p className="text-sm">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –≤–∏—â–µ, —â–æ–± –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä—à–∏–π –∑–∞–ø–∏—Å</p>
          </div>
        )}
      </div>
    </div>
  )

  const renderExperienceTab = () => (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-800">–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –¥–æ—Å–≤—ñ–¥</h3>
        <button
          onClick={() => handleArrayItemAdd('experience', { title: '', description: '' })}
          className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center gap-2"
        >
          ‚ûï –î–æ–¥–∞—Ç–∏ –¥–æ—Å–≤—ñ–¥
        </button>
      </div>

      <div className="space-y-4">
        {data.experience?.map((item, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-shadow"
          >
            <div className="space-y-4">
              <FormField
                label="–ù–∞–∑–≤–∞/–¢–∏–ø –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ"
                value={item.title || ''}
                onChange={value =>
                  handleArrayItemUpdate('experience', index, { ...item, title: value })
                }
                placeholder="–¢–µ–∞—Ç—Ä–∞–ª—å–Ω—ñ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º–∏..."
                required
              />

              <FormField
                label="–û–ø–∏—Å"
                type="textarea"
                value={item.description || ''}
                onChange={value =>
                  handleArrayItemUpdate('experience', index, { ...item, description: value })
                }
                placeholder="–î–µ—Ç–∞–ª—ñ –¥–æ—Å–≤—ñ–¥—É, –≤–∞–∂–ª–∏–≤—ñ –ø—Ä–æ–µ–∫—Ç–∏..."
                rows={3}
                maxLength={500}
                showCharCount
              />
            </div>

            <button
              onClick={() => handleArrayItemRemove('experience', index)}
              className="mt-4 px-3 py-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-2"
            >
              üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
            </button>
          </motion.div>
        ))}

        {(!data.experience || data.experience.length === 0) && (
          <div className="text-center py-12 text-gray-500">
            <div className="text-4xl mb-4">üíº</div>
            <p className="text-lg font-medium mb-2">–î–æ–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –¥–æ—Å–≤—ñ–¥</p>
            <p className="text-sm">–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º–∏ –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏</p>
          </div>
        )}
      </div>
    </div>
  )

  const renderSkillsTab = () => (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-800">–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –Ω–∞–≤–∏—á–∫–∏</h3>
        <button
          onClick={() => handleArrayItemAdd('skills', '')}
          className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center gap-2"
        >
          ‚ûï –î–æ–¥–∞—Ç–∏ –Ω–∞–≤–∏—á–∫—É
        </button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {data.skills?.map((skill, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            className="bg-white border border-gray-200 rounded-xl p-4 hover:shadow-md transition-all group"
          >
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
                <span className="text-lg">‚ö°</span>
              </div>
              <input
                type="text"
                value={skill}
                onChange={e => handleArrayItemUpdate('skills', index, e.target.value)}
                className="flex-1 border-none bg-transparent focus:outline-none font-medium text-gray-900"
                placeholder="–ù–∞–∑–≤–∞ –Ω–∞–≤–∏—á–∫–∏..."
              />
              <button
                onClick={() => handleArrayItemRemove('skills', index)}
                className="opacity-0 group-hover:opacity-100 p-1 text-red-500 hover:text-red-700 transition-all"
              >
                ‚úï
              </button>
            </div>
          </motion.div>
        ))}

        {(!data.skills || data.skills.length === 0) && (
          <div className="col-span-full text-center py-12 text-gray-500">
            <div className="text-4xl mb-4">‚ö°</div>
            <p className="text-lg font-medium mb-2">–î–æ–¥–∞–π—Ç–µ —Å–≤–æ—ó –Ω–∞–≤–∏—á–∫–∏</p>
            <p className="text-sm">–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ —Å–≤–æ—ó –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –≤–º—ñ–Ω–Ω—è</p>
          </div>
        )}
      </div>
    </div>
  )

  const renderAchievementsTab = () => (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold text-gray-800">–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ç–∞ –Ω–∞–≥–æ—Ä–æ–¥–∏</h3>
        <button
          onClick={() => handleArrayItemAdd('achievements', { title: '', description: '' })}
          className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center gap-2"
        >
          ‚ûï –î–æ–¥–∞—Ç–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
        </button>
      </div>

      <div className="space-y-4">
        {data.achievements?.map((item, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-shadow"
          >
            <div className="space-y-4">
              <FormField
                label="–ù–∞–∑–≤–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è"
                value={item.title || ''}
                onChange={value =>
                  handleArrayItemUpdate('achievements', index, { ...item, title: value })
                }
                placeholder="–ù–∞–≥–æ—Ä–æ–¥–∞, –≤–∏–∑–Ω–∞–Ω–Ω—è, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è..."
                required
              />

              <FormField
                label="–û–ø–∏—Å"
                type="textarea"
                value={item.description || ''}
                onChange={value =>
                  handleArrayItemUpdate('achievements', index, { ...item, description: value })
                }
                placeholder="–î–µ—Ç–∞–ª—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è, –π–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è..."
                rows={3}
                maxLength={300}
                showCharCount
              />
            </div>

            <button
              onClick={() => handleArrayItemRemove('achievements', index)}
              className="mt-4 px-3 py-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-2"
            >
              üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
            </button>
          </motion.div>
        ))}

        {(!data.achievements || data.achievements.length === 0) && (
          <div className="text-center py-12 text-gray-500">
            <div className="text-4xl mb-4">üèÜ</div>
            <p className="text-lg font-medium mb-2">–î–æ–¥–∞–π—Ç–µ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è</p>
            <p className="text-sm">–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–º–∏ —É—Å–ø—ñ—Ö–∞–º–∏</p>
          </div>
        )}
      </div>
    </div>
  )

  const renderTabContent = () => {
    switch (activeSubTab) {
      case 'personalInfo':
        return renderPersonalInfoTab()
      case 'biography':
        return renderBiographyTab()
      case 'education':
        return renderEducationTab()
      case 'experience':
        return renderExperienceTab()
      case 'skills':
        return renderSkillsTab()
      case 'achievements':
        return renderAchievementsTab()
      default:
        return renderPersonalInfoTab()
    }
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="border-b border-gray-200 pb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">–ü—Ä–æ –º–µ–Ω–µ</h2>
        <p className="text-gray-600">
          –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Å–µ–±–µ, –æ—Å–≤—ñ—Ç—É, –¥–æ—Å–≤—ñ–¥ —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
        </p>
      </div>

      {/* Sub Tabs */}
      <div className="flex flex-wrap gap-2">
        {subTabs.map(tab => (
          <button
            key={tab.id}
            onClick={() => setActiveSubTab(tab.id)}
            className={`px-4 py-2 rounded-xl font-medium transition-all duration-300 flex items-center gap-2 ${
              activeSubTab === tab.id
                ? 'bg-purple-100 text-purple-700 shadow-sm border border-purple-200'
                : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'
            }`}
          >
            <span className="text-sm">{tab.icon}</span>
            {tab.label}
          </button>
        ))}
      </div>

      {/* Content */}
      <AnimatePresence mode="wait">
        <motion.div
          key={activeSubTab}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: -20 }}
          transition={{ duration: 0.3 }}
        >
          {renderTabContent()}
        </motion.div>
      </AnimatePresence>
    </div>
  )
}

export default AboutSection
