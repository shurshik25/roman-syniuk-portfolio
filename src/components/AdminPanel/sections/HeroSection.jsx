
import { motion } from 'framer-motion'
import FormField from '../components/FormField'
import ImageUpload from '../components/ImageUpload'
import StatsEditor from '../components/StatsEditor'
import { getImageWithFallback, handleImageError } from '../../../utils/imageHelpers'

const HeroSection = ({ data, updateContent, onImageUpload, addToHistory }) => {
  if (!data) return null

  const handleFieldChange = (field, value) => {
    if (updateContent && typeof updateContent === 'function') {
      updateContent(field, value)
      addToHistory('edit', `–ó–º—ñ–Ω–µ–Ω–æ –ø–æ–ª–µ "${field}" –≤ –≥–æ–ª–æ–≤–Ω—ñ–π —Å–µ–∫—Ü—ñ—ó`)
    } else {
      console.error('HeroSection: updateContent is not a function!')
    }
  }

  const handleImageChange = file => {
    onImageUpload(file, {
      section: 'hero',
      field: 'profileImage',
      imageType: 'profile',
    })
  }

  const handleStatsChange = stats => {
    updateContent('stats', stats)
    addToHistory('edit', '–û–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –≥–æ–ª–æ–≤–Ω—ñ–π —Å–µ–∫—Ü—ñ—ó')
  }

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="border-b border-gray-200 pb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">–ì–æ–ª–æ–≤–Ω–∞ —Å–µ–∫—Ü—ñ—è</h2>
        <p className="text-gray-700">
          –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è, —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –≤–∞—à–æ–≥–æ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Basic Info */}
        <div className="space-y-6">
          <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
            üìù –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
          </h3>

          <FormField
            label="–Ü–º'—è"
            value={data.name || ''}
            onChange={value => handleFieldChange('name', value)}
            placeholder="–í–∞—à–µ –ø–æ–≤–Ω–µ —ñ–º'—è"
            required
          />

          <FormField
            label="–ó–∞–≥–æ–ª–æ–≤–æ–∫/–ü—Ä–æ—Ñ–µ—Å—ñ—è"
            value={data.title || ''}
            onChange={value => handleFieldChange('title', value)}
            placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ê–∫—Ç–æ—Ä —Ç–µ–∞—Ç—Ä—É —Ç–∞ –∫—ñ–Ω–æ"
            required
          />

          <FormField
            label="–û–ø–∏—Å"
            type="textarea"
            value={data.description || ''}
            onChange={value => handleFieldChange('description', value)}
            placeholder="–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –≤–∞—à–æ—ó –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å"
            rows={4}
            maxLength={500}
            showCharCount
          />
        </div>

        {/* Profile Image */}
        <div className="space-y-6">
          <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
            üñºÔ∏è –ü—Ä–æ—Ñ—ñ–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
          </h3>

          <ImageUpload
            currentImage={data.profileImage}
            onImageChange={handleImageChange}
            aspectRatio="1:1"
            maxSize={5}
            acceptedFormats={['JPG', 'PNG', 'WebP']}
            placeholder="–î–æ–¥–∞–π—Ç–µ –≤–∞—à–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ —Ñ–æ—Ç–æ"
          />

          <div className="bg-blue-50 p-4 rounded-lg">
            <h4 className="font-medium text-blue-900 mb-2">üí° –ü–æ—Ä–∞–¥–∏ –¥–ª—è —Ñ–æ—Ç–æ:</h4>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è</li>
              <li>‚Ä¢ –û–±–µ—Ä—ñ—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π —Ñ–æ–Ω</li>
              <li>‚Ä¢ –†–æ–∑–º—ñ—Ä –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: –º—ñ–Ω—ñ–º—É–º 400x400px</li>
              <li>‚Ä¢ –§–æ—Ä–º–∞—Ç: JPG –∞–±–æ PNG</li>
            </ul>
          </div>
        </div>
      </div>

      {/* Stats Section */}
      <div className="space-y-6">
        <h3 className="text-lg font-semibold text-gray-800 flex items-center gap-2">
          üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—è–≥–Ω–µ–Ω—å
        </h3>

        <StatsEditor
          stats={data.stats || {}}
          onChange={handleStatsChange}
          fields={[
            { key: 'roles', label: '–ó—ñ–≥—Ä–∞–Ω—ñ —Ä–æ–ª—ñ', suffix: '+', type: 'number' },
            { key: 'experience', label: '–†–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É', suffix: '+', type: 'number' },
            { key: 'availability', label: '–î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å', suffix: '%', type: 'number', max: 100 },
          ]}
        />

        <div className="bg-gray-50 p-4 rounded-lg">
          <h4 className="font-medium text-gray-900 mb-2">‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:</h4>
          <p className="text-sm text-gray-700">
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —É –≤–∏–≥–ª—è–¥—ñ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏—Ö –ª—ñ—á–∏–ª—å–Ω–∏–∫—ñ–≤ –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.
            –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –æ–∫—Ä—É–≥–ª–µ–Ω—ñ —á–∏—Å–ª–∞ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è.
          </p>
        </div>
      </div>

      {/* Preview */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="bg-gradient-to-r from-purple-50 to-pink-50 p-6 rounded-xl border border-purple-200"
      >
        <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
          üëÅÔ∏è –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥
        </h3>

        <div className="bg-white p-6 rounded-lg shadow-sm">
          <div className="flex items-center gap-6">
            {getImageWithFallback(data.profileImage, 'profile') !== '/images/placeholder.svg' && (
              <img
                src={getImageWithFallback(data.profileImage, 'profile')}
                alt="–ü—Ä–æ—Ñ—ñ–ª—å–Ω–µ —Ñ–æ—Ç–æ"
                className="w-20 h-20 rounded-full object-cover border-2 border-purple-200"
                onError={e => handleImageError(e)}
              />
            )}
            <div>
              <h1 className="text-2xl font-bold text-gray-900">{data.name}</h1>
              <p className="text-purple-600 font-medium">{data.title}</p>
              <p className="text-gray-700 mt-2 text-sm">{data.description}</p>
            </div>
          </div>

          {data.stats && (
            <div className="flex gap-6 mt-6 pt-6 border-t border-gray-100">
              {Object.entries(data.stats).map(([key, value]) => (
                <div key={key} className="text-center">
                  <div className="text-2xl font-bold text-purple-600">{value}</div>
                  <div className="text-sm text-gray-500 capitalize">{key}</div>
                </div>
              ))}
            </div>
          )}
        </div>
      </motion.div>
    </div>
  )
}

export default HeroSection
