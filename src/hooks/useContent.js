import { useState, useEffect } from 'react'

// API base URL - –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ localhost
const API_BASE = 'http://localhost:3001'

// –ü–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ —è–∫ fallback
const fallbackData = {
  hero: {
    name: '–†–æ–º–∞–Ω –°–∏–Ω—é–∫',
    title: '–ê–∫—Ç–æ—Ä —Ç–µ–∞—Ç—Ä—É —Ç–∞ –∫—ñ–Ω–æ ‚Ä¢ –ê–≤—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É',
    description:
      '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∞–∫—Ç–æ—Ä –∑ –•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ, —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–∏—Ö –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö —Ç–∞ –∫—ñ–Ω–æ—Ä–æ–ª—è—Ö.',
    profileImage: '',
    stats: [
      { label: '–†–æ–ª–µ–π', value: '50+' },
      { label: '–î–æ—Å–≤—ñ–¥—É', value: '10+' },
      { label: '–î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å', value: '100%' },
    ],
  },
  about: {
    biography: '–†–æ–º–∞–Ω –°–∏–Ω—é–∫ - —Ç–∞–ª–∞–Ω–æ–≤–∏—Ç–∏–π –∞–∫—Ç–æ—Ä —Ç–∞ –∞–≤—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑ –•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ.',
    education: ['–¢–µ–∞—Ç—Ä–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç', '–ö—É—Ä—Å–∏ –∞–∫—Ç–æ—Ä—Å—å–∫–æ—ó –º–∞–π—Å—Ç–µ—Ä–Ω–æ—Å—Ç—ñ'],
    experience: ['–¢–µ–∞—Ç—Ä —ñ–º–µ–Ω—ñ –®–µ–≤—á–µ–Ω–∫–∞', '–ö—ñ–Ω–æ—Å—Ç—É–¥—ñ—è –î–æ–≤–∂–µ–Ω–∫–∞'],
    skills: ['–ê–∫—Ç–æ—Ä—Å—å–∫–∞ –º–∞–π—Å—Ç–µ—Ä–Ω—ñ—Å—Ç—å', '–°—Ü–µ–Ω—ñ—á–Ω–∞ –º–æ–≤–∞', '–ü–ª–∞—Å—Ç–∏–∫–∞', '–í–æ–∫–∞–ª'],
    achievements: ['–õ–∞—É—Ä–µ–∞—Ç —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–∏—Ö —Ñ–µ—Å—Ç–∏–≤–∞–ª—ñ–≤', '–ù–∞–≥–æ—Ä–æ–¥–∏ –∑–∞ –Ω–∞–π–∫—Ä–∞—â—ñ —Ä–æ–ª—ñ'],
  },
  portfolio: {
    categories: [
      { id: 'all', label: '–í—Å—ñ —Ä–æ–±–æ—Ç–∏' },
      { id: 'theater', label: '–¢–µ–∞—Ç—Ä' },
      { id: 'cinema', label: '–ö—ñ–Ω–æ' },
      { id: 'photo', label: '–§–æ—Ç–æ—Å–µ—Å—ñ—ó' },
    ],
    works: [
      {
        id: 1,
        title: '–ì–∞–º–ª–µ—Ç',
        description: '–ì–æ–ª–æ–≤–Ω–∞ —Ä–æ–ª—å —É –≤–∏—Å—Ç–∞–≤—ñ "–ì–∞–º–ª–µ—Ç"',
        image: '/roman-syniuk-portfolio/images/theater/492004700_9329654113830678_7770632857348615682_n.jpg',
        category: 'theater'
      },
      {
        id: 2,
        title: '–ö–æ—Ä–æ–ª—å –õ—ñ—Ä',
        description: '–†–æ–ª—å –ï–¥–≥–∞—Ä–∞ —É –≤–∏—Å—Ç–∞–≤—ñ "–ö–æ—Ä–æ–ª—å –õ—ñ—Ä"',
        image: '/roman-syniuk-portfolio/images/theater/492057926_9329654067164016_4594880287050514130_n.jpg',
        category: 'theater'
      }
    ],
  },
  videoRepertoire: {
    categories: [
      { id: 'theater', label: '–¢–µ–∞—Ç—Ä', icon: 'üé≠' },
      { id: 'cinema', label: '–ö—ñ–Ω–æ', icon: 'üé¨' },
      { id: 'tv', label: '–¢–µ–ª–µ–±–∞—á–µ–Ω–Ω—è', icon: 'üì∫' },
    ],
    videos: [
      {
        id: 1,
        title: '–ü—Ä–∏–∫–ª–∞–¥ —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–æ—ó —Ä–æ–ª—ñ',
        author: '–ê–≤—Ç–æ—Ä',
        theater: '–¢–µ–∞—Ç—Ä',
        year: '2023',
        director: '–†–µ–∂–∏—Å–µ—Ä',
        role: '–†–æ–ª—å',
        category: 'theater',
        description: '–û–ø–∏—Å —Ä–æ–ª—ñ',
        videoUrl: '',
        youtubeUrl: '',
        videoType: 'local',
        thumbnail: '',
        duration: '3:00',
        tags: ['—Ç–µ–∞—Ç—Ä', '—Ä–æ–ª—å'],
      },
    ],
  },
  contact: {
    location: '–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π, –£–∫—Ä–∞—ó–Ω–∞',
    email: 'roma.sinuk@example.com',
    phone: '+380 XX XXX XX XX',
    social: {
      facebook: {
        url: 'https://facebook.com/roma.sinuk',
        username: '@roma.sinuk',
        followers: '2,4 —Ç–∏—Å. —á–∏—Ç–∞—á—ñ–≤',
      },
      instagram: {
        url: 'https://instagram.com/roma_vodoliy',
        username: '@roma_vodoliy',
        followers: 'Instagram –ø—Ä–æ—Ñ—ñ–ª—å',
      },
      tiktok: {
        url: 'https://tiktok.com/@romavodoliy',
        username: '@romavodoliy',
        followers: 'TikTok –ø—Ä–æ—Ñ—ñ–ª—å',
      },
    },
    projectAvailability: ['–¢–µ–∞—Ç—Ä–∞–ª—å–Ω—ñ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏', '–ö—ñ–Ω–æ—Ñ—ñ–ª—å–º–∏', '–¢–µ–ª–µ—Å–µ—Ä—ñ–∞–ª–∏'],
    note: '',
  },
}

export const useContent = () => {
  const [content, setContent] = useState(fallbackData)
  const [isLoading, setIsLoading] = useState(true)
  const [isEditing, setIsEditing] = useState(false)



  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
  const loadContent = async () => {
    try {
      // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ API
      try {
        const response = await fetch(`${API_BASE}/api/content`)
        if (response.ok) {
          const contentData = await response.json()
          console.log('useContent hook - –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ API:', contentData)
          setContent(contentData)
          setIsLoading(false)
          return
        }
      } catch (error) {
        console.log('useContent hook - –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ API, –ø—Ä–æ–±—É—é localStorage:', error)
      }

      // –Ø–∫—â–æ API –Ω–µ –ø—Ä–∞—Ü—é—î, –ø—Ä–æ–±—É—î–º–æ localStorage
      const saved = localStorage.getItem('portfolio-content')
      if (saved) {
        const parsedContent = JSON.parse(saved)
        console.log('useContent hook - –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ localStorage:', parsedContent)
        setContent(parsedContent)
        setIsLoading(false)
        return
      }

      // –Ø–∫—â–æ –Ω–µ–º–∞—î –≤ localStorage, –ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ —Ñ–∞–π–ª—É
      try {
        const response = await fetch('/roman-syniuk-portfolio/content.json')
        if (response.ok) {
          const contentData = await response.json()
          console.log('useContent hook - –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ —Ñ–∞–π–ª—É:', contentData)
          setContent(contentData)
        } else {
          console.log('useContent hook - –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é fallback')
          setContent(fallbackData)
        }
      } catch (error) {
        console.log('useContent hook - –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é fallback:', error)
        setContent(fallbackData)
      }
    } catch (error) {
      console.error('useContent hook - –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error)
      setContent(fallbackData)
    } finally {
      setIsLoading(false)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
  const reloadContent = async () => {
    setIsLoading(true)
    localStorage.removeItem('portfolio-content')
    await loadContent()
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
  const updateContent = async (section, field, value) => {
    try {
      // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ
      setContent(prev => ({
        ...prev,
        [section]: {
          ...prev[section],
          [field]: value,
        },
      }))

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ API
      try {
        const response = await fetch(`${API_BASE}/api/content/${section}/${field}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ value })
        })
        
        if (response.ok) {
          console.log('API: –∫–æ–Ω—Ç–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        } else {
          console.warn('API: –ø–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É')
        }
      } catch (error) {
        console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é –≤ localStorage:', error)
        // Fallback –¥–æ localStorage
        localStorage.setItem('portfolio-content', JSON.stringify(content))
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É:', error)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–∏—Ö –ø–æ–ª—ñ–≤
  const updateNestedContent = async (section, field, subField, value) => {
    try {
      // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ
      setContent(prev => ({
        ...prev,
        [section]: {
          ...prev[section],
          [field]: {
            ...prev[section][field],
            [subField]: value,
          },
        },
      }))

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ API
      try {
        const response = await fetch(`${API_BASE}/api/content/${section}/${field}/${subField}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ value })
        })
        
        if (response.ok) {
          console.log('API: –≤–∫–ª–∞–¥–µ–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        } else {
          console.warn('API: –ø–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É')
        }
      } catch (error) {
        console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é –≤ localStorage:', error)
        localStorage.setItem('portfolio-content', JSON.stringify(content))
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É:', error)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞—Å–∏–≤—ñ–≤
  const updateArrayContent = async (section, field, index, value) => {
    try {
      // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ
      setContent(prev => {
        if (!prev[section] || !prev[section][field] || !Array.isArray(prev[section][field])) {
          console.warn(`updateArrayContent: ${field} –Ω–µ —î –º–∞—Å–∏–≤–æ–º –∞–±–æ –Ω–µ —ñ—Å–Ω—É—î`)
          return prev
        }

        return {
          ...prev,
          [section]: {
            ...prev[section],
            [field]: prev[section][field].map((item, i) =>
              i === index ? { ...item, ...value } : item
            ),
          },
        }
      })

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ API
      try {
        const response = await fetch(`${API_BASE}/api/content/${section}/${field}/${index}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ value })
        })
        
        if (response.ok) {
          console.log('API: –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –æ–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        } else {
          console.warn('API: –ø–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É')
        }
      } catch (error) {
        console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é –≤ localStorage:', error)
        localStorage.setItem('portfolio-content', JSON.stringify(content))
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É:', error)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤
  const addArrayItem = async (section, field, newItem) => {
    try {
      // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ
      setContent(prev => {
        if (!prev[section]) {
          console.warn(`addArrayItem: —Å–µ–∫—Ü—ñ—è ${section} –Ω–µ —ñ—Å–Ω—É—î`)
          return prev
        }

        if (!prev[section][field]) {
          return {
            ...prev,
            [section]: {
              ...prev[section],
              [field]: [newItem],
            },
          }
        }

        if (!Array.isArray(prev[section][field])) {
          console.warn(`addArrayItem: ${field} –Ω–µ —î –º–∞—Å–∏–≤–æ–º`)
          return prev
        }

        return {
          ...prev,
          [section]: {
            ...prev[section],
            [field]: [...prev[section][field], newItem],
          },
        }
      })

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ API
      try {
        const response = await fetch(`${API_BASE}/api/content/${section}/${field}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ item: newItem })
        })
        
        if (response.ok) {
          console.log('API: –µ–ª–µ–º–µ–Ω—Ç –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        } else {
          console.warn('API: –ø–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞')
        }
      } catch (error) {
        console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é –≤ localStorage:', error)
        localStorage.setItem('portfolio-content', JSON.stringify(content))
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞:', error)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –º–∞—Å–∏–≤—É
  const removeArrayItem = async (section, field, index) => {
    try {
      // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ
      setContent(prev => {
        if (!prev[section] || !prev[section][field] || !Array.isArray(prev[section][field])) {
          console.warn(`removeArrayItem: ${field} –Ω–µ —î –º–∞—Å–∏–≤–æ–º –∞–±–æ –Ω–µ —ñ—Å–Ω—É—î`)
          return prev
        }

        return {
          ...prev,
          [section]: {
            ...prev[section],
            [field]: prev[section][field].filter((_, i) => i !== index),
          },
        }
      })

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ API
      try {
        const response = await fetch(`${API_BASE}/api/content/${section}/${field}/${index}`, {
          method: 'DELETE'
        })
        
        if (response.ok) {
          console.log('API: –µ–ª–µ–º–µ–Ω—Ç –≤–∏–¥–∞–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ')
        } else {
          console.warn('API: –ø–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞')
        }
      } catch (error) {
        console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é –≤ localStorage:', error)
        localStorage.setItem('portfolio-content', JSON.stringify(content))
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞:', error)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω –≤ localStorage —Ç–∞ GitHub
  const saveChanges = async () => {
    try {
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
      localStorage.setItem('portfolio-content', JSON.stringify(content))
      
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ content.json (–¥–ª—è GitHub) —á–µ—Ä–µ–∑ GitHub API
      try {
        const response = await fetch('https://api.github.com/repos/shurshik25/roman-syniuk-portfolio/dispatches', {
          method: 'POST',
          headers: { 
            'Content-Type': 'application/json',
            'Authorization': `token ${process.env.REACT_APP_GITHUB_TOKEN}`,
            'Accept': 'application/vnd.github.v3+json'
          },
          body: JSON.stringify({
            event_type: 'content-updated',
            client_payload: {
              content: JSON.stringify(content, null, 2)
            }
          })
        })
        
        if (response.ok) {
          console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ GitHub')
        } else {
          console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ GitHub, –∞–ª–µ localStorage –æ–Ω–æ–≤–ª–µ–Ω–æ')
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è GitHub API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é —Ç—ñ–ª—å–∫–∏ –≤ localStorage:', error)
      }
      
      setIsEditing(false)
      return true
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è:', error)
      return false
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑–º—ñ–Ω
  const loadSavedChanges = () => {
    try {
      const saved = localStorage.getItem('portfolio-content')
      if (saved) {
        const parsedContent = JSON.parse(saved)
        // console.log('useContent hook - –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ localStorage:', parsedContent)
        setContent(parsedContent)
        return true
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', error)
    }
    return false
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
  const resetToDefault = () => {
    // console.log('useContent hook - —Å–∫–∏–¥–∞—é –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É')
    setContent(fallbackData)
    localStorage.removeItem('portfolio-content')
    setIsEditing(false)
  }

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  useEffect(() => {
    // console.log('useContent hook - useEffect –≤–∏–∫–ª–∏–∫–∞–Ω–æ')
    loadContent()
  }, [])

  return {
    content,
    isLoading,
    isEditing,
    setIsEditing,
    updateContent,
    updateNestedContent,
    updateArrayContent,
    addArrayItem,
    removeArrayItem,
    saveChanges,
    loadSavedChanges,
    resetToDefault,
    reloadContent,
  }
}
