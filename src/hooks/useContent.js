import { useState, useEffect } from 'react'

// –ü–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ —è–∫ fallback
const fallbackData = {
  hero: {
    name: '–†–æ–º–∞–Ω –°–∏–Ω—é–∫',
    title: '–ê–∫—Ç–æ—Ä —Ç–µ–∞—Ç—Ä—É —Ç–∞ –∫—ñ–Ω–æ ‚Ä¢ –ê–≤—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É',
    description:
      '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∞–∫—Ç–æ—Ä –∑ –•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ, —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–∏—Ö –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö —Ç–∞ –∫—ñ–Ω–æ—Ä–æ–ª—è—Ö.',
    profileImage: '',
    stats: {
      roles: '50+',
      experience: '10+',
      availability: '100%',
    },
  },
  about: {
    biography: '–†–æ–º–∞–Ω –°–∏–Ω—é–∫ - —Ç–∞–ª–∞–Ω–æ–≤–∏—Ç–∏–π –∞–∫—Ç–æ—Ä —Ç–∞ –∞–≤—Ç–æ—Ä —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑ –•–º–µ–ª—å–Ω–∏—Ü—å–∫–æ–≥–æ.',
    education: [],
    experience: [],
    skills: [],
    achievements: [],
  },
  portfolio: {
    categories: [
      { id: 'all', label: '–í—Å—ñ —Ä–æ–±–æ—Ç–∏' },
      { id: 'theater', label: '–¢–µ–∞—Ç—Ä' },
      { id: 'cinema', label: '–ö—ñ–Ω–æ' },
      { id: 'photo', label: '–§–æ—Ç–æ—Å–µ—Å—ñ—ó' },
    ],
    works: [],
  },
  videoRepertoire: {
    categories: [
      { id: 'theater', label: '–¢–µ–∞—Ç—Ä', icon: 'üé≠' },
      { id: 'cinema', label: '–ö—ñ–Ω–æ', icon: 'üé¨' },
      { id: 'tv', label: '–¢–µ–ª–µ–±–∞—á–µ–Ω–Ω—è', icon: 'üì∫' },
    ],
    videos: [],
  },
  contact: {
    location: '–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π, –£–∫—Ä–∞—ó–Ω–∞',
    email: 'roma.sinuk@example.com',
    phone: '+380 XX XXX XX XX',
    social: {
      facebook: {
        url: 'https://facebook.com/roma.sinuk',
        username: '@roma.sinuk',
        followers: '2,4 —Ç–∏—Å. —á–∏—Ç–∞—á—ñ–≤',
      },
      instagram: {
        url: 'https://instagram.com/roma_vodoliy',
        username: '@roma_vodoliy',
        followers: 'Instagram –ø—Ä–æ—Ñ—ñ–ª—å',
      },
      tiktok: {
        url: 'https://tiktok.com/@romavodoliy',
        username: '@romavodoliy',
        followers: 'TikTok –ø—Ä–æ—Ñ—ñ–ª—å',
      },
    },
    projectAvailability: [],
    note: '',
  },
}

export const useContent = () => {
  const [content, setContent] = useState(fallbackData)
  const [isLoading, setIsLoading] = useState(true)
  const [isEditing, setIsEditing] = useState(false)

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
  const loadContent = async () => {
    try {
      // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ localStorage
      const saved = localStorage.getItem('portfolio-content')
      if (saved) {
        const parsedContent = JSON.parse(saved)
        console.log('useContent hook - –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ localStorage:', parsedContent)
        setContent(parsedContent)
        setIsLoading(false)
        return
      }

      // –Ø–∫—â–æ –Ω–µ–º–∞—î –≤ localStorage, –ø—Ä–æ–±—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ —Ñ–∞–π–ª—É
      try {
        const response = await fetch('/roman-syniuk-portfolio/content.json')
        if (response.ok) {
          const contentData = await response.json()
          console.log('useContent hook - –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ —Ñ–∞–π–ª—É:', contentData)
          setContent(contentData)
        } else {
          console.log('useContent hook - –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é fallback')
          setContent(fallbackData)
        }
      } catch (error) {
        console.log('useContent hook - –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é fallback:', error)
        setContent(fallbackData)
      }
    } catch (error) {
      console.error('useContent hook - –∫—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error)
      setContent(fallbackData)
    } finally {
      setIsLoading(false)
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
  const reloadContent = async () => {
    setIsLoading(true)
    localStorage.removeItem('portfolio-content')
    await loadContent()
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
  const updateContent = (field, value) => {
    setContent(prev => {
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –≤ —è–∫—ñ–π —Å–µ–∫—Ü—ñ—ó –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ–ª–µ
      let section = null
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–µ–∫—Ü—ñ—ó
      if (prev.hero && prev.hero[field] !== undefined) {
        section = 'hero'
      } else if (prev.about && prev.about[field] !== undefined) {
        section = 'about'
      } else if (prev.portfolio && prev.portfolio[field] !== undefined) {
        section = 'portfolio'
      } else if (prev.videoRepertoire && prev.videoRepertoire[field] !== undefined) {
        section = 'videoRepertoire'
      } else if (prev.contact && prev.contact[field] !== undefined) {
        section = 'contact'
      }
      
      // –Ø–∫—â–æ –ø–æ–ª–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –æ–Ω–æ–≤–ª—é—î–º–æ hero
      if (!section) {
        section = 'hero'
      }
      
      return {
        ...prev,
        [section]: {
          ...prev[section],
          [field]: value,
        },
      }
    })
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–µ–Ω–∏—Ö –ø–æ–ª—ñ–≤
  const updateNestedContent = (field, subField, value) => {
    console.log('updateNestedContent –≤–∏–∫–ª–∏–∫–∞–Ω–æ:', { field, subField, value })
    
    setContent(prev => {
      // –†–æ–∑–±–∏–≤–∞—î–º–æ subField –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "facebook.url" -> ["facebook", "url"])
      const subFieldParts = subField.split('.')
      console.log('subFieldParts:', subFieldParts)
      
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –≤ —è–∫—ñ–π —Å–µ–∫—Ü—ñ—ó –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ–ª–µ
      let section = null
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–µ–∫—Ü—ñ—ó
      if (prev.hero && prev.hero[field] !== undefined) {
        section = 'hero'
      } else if (prev.about && prev.about[field] !== undefined) {
        section = 'about'
      } else if (prev.portfolio && prev.portfolio[field] !== undefined) {
        section = 'portfolio'
      } else if (prev.videoRepertoire && prev.videoRepertoire[field] !== undefined) {
        section = 'videoRepertoire'
      } else if (prev.contact && prev.contact[field] !== undefined) {
        section = 'contact'
      }
      
      // –Ø–∫—â–æ –ø–æ–ª–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –æ–Ω–æ–≤–ª—é—î–º–æ contact
      if (!section) {
        section = 'contact'
      }
      
      if (subFieldParts.length === 1) {
        // –ü—Ä–æ—Å—Ç–∏–π –≤–∏–ø–∞–¥–æ–∫: field.subField
        console.log('–ü—Ä–æ—Å—Ç–∏–π –≤–∏–ø–∞–¥–æ–∫:', { field, subField, value, section })
        return {
          ...prev,
          [section]: {
            ...prev[section],
            [field]: {
              ...prev[section][field],
              [subField]: value,
            },
          },
        }
      } else {
        // –°–∫–ª–∞–¥–Ω–∏–π –≤–∏–ø–∞–¥–æ–∫: field.subField1.subField2 (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "facebook.url")
        const [firstPart, secondPart] = subFieldParts
        console.log('–°–∫–ª–∞–¥–Ω–∏–π –≤–∏–ø–∞–¥–æ–∫:', { field, firstPart, secondPart, value, section })
        
        return {
          ...prev,
          [section]: {
            ...prev[section],
            [field]: {
              ...prev[section][field],
              [firstPart]: {
                ...prev[section][field]?.[firstPart],
                [secondPart]: value,
              },
            },
          },
        }
      }
    })
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞—Å–∏–≤—ñ–≤
  const updateArrayContent = (field, index, value) => {
    setContent(prev => {
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –≤ —è–∫—ñ–π —Å–µ–∫—Ü—ñ—ó –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ–ª–µ
      let section = null
      let sectionKey = null
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–µ–∫—Ü—ñ—ó
      if (prev.portfolio && prev.portfolio[field] && Array.isArray(prev.portfolio[field])) {
        section = 'portfolio'
        sectionKey = field
      } else if (prev.contact && prev.contact[field] && Array.isArray(prev.contact[field])) {
        section = 'contact'
        sectionKey = field
      } else if (prev.about && prev.about[field] && Array.isArray(prev.about[field])) {
        section = 'about'
        sectionKey = field
      } else if (prev.videoRepertoire && prev.videoRepertoire[field] && Array.isArray(prev.videoRepertoire[field])) {
        section = 'videoRepertoire'
        sectionKey = field
      }
      
      if (!section) {
        console.warn(`updateArrayContent: ${field} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∂–æ–¥–Ω—ñ–π —Å–µ–∫—Ü—ñ—ó –∞–±–æ –Ω–µ —î –º–∞—Å–∏–≤–æ–º`)
        return prev
      }

      return {
        ...prev,
        [section]: {
          ...prev[section],
          [sectionKey]: prev[section][sectionKey].map((item, i) =>
            i === index ? { ...item, ...value } : item
          ),
        },
      }
    })
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤
  const addArrayItem = (field, newItem) => {
    setContent(prev => {
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –≤ —è–∫—ñ–π —Å–µ–∫—Ü—ñ—ó –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ–ª–µ
      let section = null
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–µ–∫—Ü—ñ—ó
      if (prev.portfolio && (prev.portfolio[field] || field === 'works' || field === 'categories')) {
        section = 'portfolio'
      } else if (prev.contact && (prev.contact[field] || field === 'projectAvailability')) {
        section = 'contact'
      } else if (prev.about && (prev.about[field] || field === 'education' || field === 'experience' || field === 'skills' || field === 'achievements')) {
        section = 'about'
      } else if (prev.videoRepertoire && (prev.videoRepertoire[field] || field === 'videos' || field === 'categories')) {
        section = 'videoRepertoire'
      }
      
      if (!section) {
        console.warn(`addArrayItem: ${field} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∂–æ–¥–Ω—ñ–π —Å–µ–∫—Ü—ñ—ó`)
        return prev
      }

      if (!prev[section][field]) {
        // –Ø–∫—â–æ –ø–æ–ª–µ –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –π–æ–≥–æ —è–∫ –º–∞—Å–∏–≤
        return {
          ...prev,
          [section]: {
            ...prev[section],
            [field]: [newItem],
          },
        }
      }

      if (!Array.isArray(prev[section][field])) {
        console.warn(`addArrayItem: ${field} –Ω–µ —î –º–∞—Å–∏–≤–æ–º`)
        return prev
      }

      return {
        ...prev,
        [section]: {
          ...prev[section],
          [field]: [...prev[section][field], newItem],
        },
      }
    })
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –º–∞—Å–∏–≤—É
  const removeArrayItem = (field, index) => {
    setContent(prev => {
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ, –≤ —è–∫—ñ–π —Å–µ–∫—Ü—ñ—ó –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ–ª–µ
      let section = null
      let sectionKey = null
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–µ–∫—Ü—ñ—ó
      if (prev.portfolio && prev.portfolio[field] && Array.isArray(prev.portfolio[field])) {
        section = 'portfolio'
        sectionKey = field
      } else if (prev.contact && prev.contact[field] && Array.isArray(prev.contact[field])) {
        section = 'contact'
        sectionKey = field
      } else if (prev.about && prev.about[field] && Array.isArray(prev.about[field])) {
        section = 'about'
        sectionKey = field
      } else if (prev.videoRepertoire && prev.videoRepertoire[field] && Array.isArray(prev.videoRepertoire[field])) {
        section = 'videoRepertoire'
        sectionKey = field
      }
      
      if (!section) {
        console.warn(`removeArrayItem: ${field} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∂–æ–¥–Ω—ñ–π —Å–µ–∫—Ü—ñ—ó –∞–±–æ –Ω–µ —î –º–∞—Å–∏–≤–æ–º`)
        return prev
      }

      return {
        ...prev,
        [section]: {
          ...prev[section],
          [sectionKey]: prev[section][sectionKey].filter((_, i) => i !== index),
        },
      }
    })
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω –≤ localStorage —Ç–∞ GitHub
  const saveChanges = async () => {
    try {
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage
      localStorage.setItem('portfolio-content', JSON.stringify(content))
      
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ content.json (–¥–ª—è GitHub) —á–µ—Ä–µ–∑ GitHub API
      try {
        const response = await fetch('https://api.github.com/repos/shurshik25/roman-syniuk-portfolio/dispatches', {
          method: 'POST',
          headers: { 
            'Content-Type': 'application/json',
            'Authorization': `token ${process.env.REACT_APP_GITHUB_TOKEN}`,
            'Accept': 'application/vnd.github.v3+json'
          },
          body: JSON.stringify({
            event_type: 'content-updated',
            client_payload: {
              content: JSON.stringify(content, null, 2)
            }
          })
        })
        
        if (response.ok) {
          console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ GitHub')
        } else {
          console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ GitHub, –∞–ª–µ localStorage –æ–Ω–æ–≤–ª–µ–Ω–æ')
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è GitHub API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∑–±–µ—Ä—ñ–≥–∞—é —Ç—ñ–ª—å–∫–∏ –≤ localStorage:', error)
      }
      
      setIsEditing(false)
      return true
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è:', error)
      return false
    }
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑–º—ñ–Ω
  const loadSavedChanges = () => {
    try {
      const saved = localStorage.getItem('portfolio-content')
      if (saved) {
        const parsedContent = JSON.parse(saved)
        setContent(parsedContent)
        return true
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', error)
    }
    return false
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
  const resetToDefault = () => {
    setContent(fallbackData)
    localStorage.removeItem('portfolio-content')
    setIsEditing(false)
  }

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  useEffect(() => {
    loadContent()
  }, [])

  return {
    content,
    isLoading,
    isEditing,
    setIsEditing,
    updateContent,
    updateNestedContent,
    updateArrayContent,
    addArrayItem,
    removeArrayItem,
    saveChanges,
    loadSavedChanges,
    resetToDefault,
    reloadContent,
  }
}
